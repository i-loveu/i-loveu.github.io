<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - 사랑합니다 기술 블로그</title><link>https://i-loveu.github.io/posts/</link><description>All Posts | 사랑합니다 기술 블로그</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 12 Apr 2022 13:21:37 +0900</lastBuildDate><atom:link href="https://i-loveu.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>Picture Tag</title><link>https://i-loveu.github.io/picture-tag/</link><pubDate>Tue, 12 Apr 2022 13:21:37 +0900</pubDate><author>Author</author><guid>https://i-loveu.github.io/picture-tag/</guid><description><![CDATA[Picture Tag 백그라운드 이미지는 css에서 처리하지만, img태그는 처리하기 어려웠다. 그런데 img태그도 html상에서 미디어 쿼리를 적용할 수 있는 태그가 있다.
1 2 3 4 5  &lt;picture&gt; &lt;source srcset=&#34;images/logo-sone.svg&#34; media=&#34;(min-width:768px)&#34; /&gt; &lt;source srcset=&#34;images/logo-sone-m.svg&#34; media=&#34;(max-width:767px)&#34; /&gt; &lt;img src=&#34;images/logo-sone.svg&#34; alt=&#34;에스원&#34; /&gt; &lt;/picture&gt;   &lt;picture&gt;&lt;/picture&gt; 태그로 묶고 그 안에 소스로 미디어쿼리 처리를 한다. 그리고 위 설정이 먹히지 않는 곳은 img 태그가 보이게 된다.]]></description></item><item><title>Npm Upgrad</title><link>https://i-loveu.github.io/npm-upgrad/</link><pubDate>Tue, 25 Jan 2022 12:57:39 +0900</pubDate><author>Author</author><guid>https://i-loveu.github.io/npm-upgrad/</guid><description>npm 업그레이드 방법 버전 확인 1 npm -v 업그레이드 1 sudo npm install -g npm</description></item><item><title>React Stric Mode란?</title><link>https://i-loveu.github.io/react-what-is-react-stric-mode/</link><pubDate>Fri, 27 Aug 2021 16:11:53 +0900</pubDate><author>Author</author><guid>https://i-loveu.github.io/react-what-is-react-stric-mode/</guid><description><![CDATA[React 앱 내의 잠재적 문제를 알아내가 위한 도구 1 2 3 4 5 6  ReactDOM.render( &lt;React.StrictMode&gt; &lt;App /&gt; &lt;/React.StrictMode&gt;, document.getElementById(&#34;root&#34;) );   용도는 아래와 같습니다.
 안전하지 않은 생명주기를 사용하는 컴포넌트 발견 레거시 문자열 ref 사용에 대한 경고 권장되지 않는 findDOMNode 사용에 대한 경고 예상치 못한 부작용 검사 레거시 context API 검사  개발용 모드  Strict 모드는 개발 모드에서만 활성화되기 때문에, 프로덕션 빌드에는 영향을 끼치지 않습니다.
 production 배포되었을 때는 stric 모드가 사라진다.]]></description></item><item><title>SSL File 생성방법</title><link>https://i-loveu.github.io/ssl-file-create/</link><pubDate>Fri, 11 Jun 2021 15:15:11 +0900</pubDate><author>Author</author><guid>https://i-loveu.github.io/ssl-file-create/</guid><description>SSL 전송계층보안: 데이터를 중간에서 해킹당하지 않도록 암호화 해서 데이터를 서버로 전송
가비아 아래의 5개 파일을 전달받는다.
Chain_RootCA_Bundle.crt apache 서버용
ChainCA1.crt
ChainCA2.crt
site_domain_cert.pem
RootCA.crt
Nginx 비밀번호가 해제된 private.key와 server.crt 키가 필요하다.
서버 비밀번호 해제하기
1 2 openssl rsa -in private.key -out nopass-private.key 비밀번호 입력 위 과정으로 nopass-private.key 키를 생성한다
server.crt 생성하기
1 cat site_domain_cert.pem Chain_RootCA_Bundle.crt &amp;gt; server.crt server.crt 파일 열어 줄바꿈 확인
1 2 3 4 5 -----END CERTIFICATE----------BEGIN CERTIFICATE----- enter를 쳐서 줄바꿈을 해준다 -----END CERTIFICATE----- -----BEGIN CERTIFICATE----- nginx 세팅</description></item><item><title>Rails 특수문자 Password Validator</title><link>https://i-loveu.github.io/rails-password-validator/</link><pubDate>Wed, 09 Jun 2021 22:46:27 +0900</pubDate><author>Author</author><guid>https://i-loveu.github.io/rails-password-validator/</guid><description><![CDATA[Rails 특수문자 Password Validator 1 2 3 4 5 6  def password_special_char special = &#34;?&lt;&gt;&#39;,?[]}{=-)(*&amp;^%$#`~{}!&#34; regex = /[#{special.gsub(/./){|char| &#34;\\#{char}&#34;}}]/ return if password =~ regex errors.add :password, &#39;영문, 숫자, 특수문자 조합 10자 이상 비밀번호를 입력해주세요.&#39; end   ]]></description></item><item><title>Ie ReplaceAll Change This</title><link>https://i-loveu.github.io/ie-replaceall-change-this/</link><pubDate>Thu, 27 May 2021 13:41:07 +0900</pubDate><author>Author</author><guid>https://i-loveu.github.io/ie-replaceall-change-this/</guid><description><![CDATA[replaceAll 대신 replace(/target/gi, &ldquo;&quot;) 1 2 3  $this.text().replaceAll(&#34;,&#34;, &#34;&#34;); // 이것 대신  $this.text().replace(/,/gi, &#34;&#34;); // 이것을 쓰자   정규식 gi옵션을 포함해서 All 대체
g: 모든 조건 검색
i: 대/소문자 구분안함]]></description></item><item><title>Window ScrollY Ie11</title><link>https://i-loveu.github.io/ie-window-scrolly/</link><pubDate>Thu, 27 May 2021 13:30:19 +0900</pubDate><author>Author</author><guid>https://i-loveu.github.io/ie-window-scrolly/</guid><description><![CDATA[window.scrollY IE undefined window.pageYOffset 를 사용한다
1 2 3 4 5 6 7 8 9 10 11  function isIE() { const ua = window.navigator.userAgent; const msie = ua.indexOf(&#34;MSIE &#34;); const trident = ua.indexOf(&#34;Trident/&#34;); return msie &gt; 0 || trident &gt; 0; } if (isIE()) { var fromTop = window.pageYOffset; } else { var fromTop = window.scrollY; }   ]]></description></item><item><title>좋은 Commit Message</title><link>https://i-loveu.github.io/commit-message-on-git/</link><pubDate>Sat, 10 Apr 2021 05:49:21 +0900</pubDate><author>Author</author><guid>https://i-loveu.github.io/commit-message-on-git/</guid><description>좋은 Commit Message 작성 방법 간결하게 쓴다.
사람 뿐 아니라 기계도 어떤 작업을 했는지 알 수 있도록 한다.
주요 단어 fix add remove use refactor simplyfy update 어떤 라이드러리를 업데이트 했다</description></item><item><title>Javascript Rest Parameter</title><link>https://i-loveu.github.io/javascript-rest-parameter/</link><pubDate>Tue, 30 Mar 2021 19:18:27 +0900</pubDate><author>Author</author><guid>https://i-loveu.github.io/javascript-rest-parameter/</guid><description><![CDATA[마지막 파라미터는 Rest 파라미터 1 2 3 4 5 6 7 8 9 10 11 12  function myFun(a, b, ...manyMoreArgs) { console.log(&#34;a&#34;, a); console.log(&#34;b&#34;, b); console.log(&#34;manyMoreArgs&#34;, manyMoreArgs); } myFun(&#34;one&#34;, &#34;two&#34;, &#34;three&#34;, &#34;four&#34;, &#34;five&#34;, &#34;six&#34;); // Console Output: // a, one // b, two // manyMoreArgs, [three, four, five, six]   앞에 명시한 파라미터를 제외한 것들을 묶어서 배열로 내보낸다]]></description></item><item><title>Vscode Format on Save</title><link>https://i-loveu.github.io/vscode-format-on-save/</link><pubDate>Tue, 30 Mar 2021 10:02:29 +0900</pubDate><author>Author</author><guid>https://i-loveu.github.io/vscode-format-on-save/</guid><description>VS Code format on Save VS 코드 저장할 때 format 정렬
command + , 눌러 세팅창 연다</description></item></channel></rss>