<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>사랑합니다 기술 블로그</title><link>https://i-loveu.github.io/</link><description>사랑합니다 기술 블로그</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 01 Nov 2023 12:38:37 +0900</lastBuildDate><atom:link href="https://i-loveu.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Flutter Error Cocoapods</title><link>https://i-loveu.github.io/flutter-error-cocoapods/</link><pubDate>Wed, 01 Nov 2023 12:38:37 +0900</pubDate><author>Author</author><guid>https://i-loveu.github.io/flutter-error-cocoapods/</guid><description>플루터를 실행하려고 할 때 &amp;lsquo;pop repo update&amp;rsquo;가 뜨는 경우 1 2 3 4 5 cd iso rm Podfile.lock pod install --repo-update cd .. flutter clean 후에 재살행</description></item><item><title>Centos 7 Nginx Update</title><link>https://i-loveu.github.io/centos-7-nginx-update/</link><pubDate>Wed, 18 Oct 2023 13:05:03 +0900</pubDate><author>Author</author><guid>https://i-loveu.github.io/centos-7-nginx-update/</guid><description>작업 순서 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 // 의존성 설치 sudo yum install yum-utils // 저장소 추가 sudo vi /etc/yum.repos.d/nginx.repo [nginx-stable] name=nginx stable repo baseurl=http://nginx.org/packages/centos/$releasever/$basearch/ gpgcheck=1 enabled=1 gpgkey=https://nginx.org/keys/nginx_signing.key // 위 작업에서 에러가 나면 baseurl=http://nginx.org/packages/centos/7/$basearch/ 로 변경 // statable 버전 활성화 yum-config-manager --enable nginx-stable // 버전 확인 yum info nginx // 저장소 갱신 sudo yum update // nginx 업데이트 sudo yum install -y nginx // nginx start systemctl start nginx nginx 버전 정보 숨기기 nginx.</description></item><item><title>Flutter Functions</title><link>https://i-loveu.github.io/flutter-functions/</link><pubDate>Thu, 09 Mar 2023 11:44:23 +0900</pubDate><author>Author</author><guid>https://i-loveu.github.io/flutter-functions/</guid><description>link Navigator.of(context).push() 유저가 이전 화면으로 돌아갈 수 있다.
Navigator.of(context).pushAndRemoveUntil() (route) 부분을 false return 하면 Route 히스토리가 사라진다. 그래서 이전 페이지로 가지 못한다.
1 2 3 4 5 6 7 8 Navigator.of(context).push() Navigator.of(context).pushAndRemoveUntil( MaterialPageRoute( builder: (context) =&amp;gt; const NextScreen(), ), (route) { return false; }); component FractionallySizedBox 가능한한 큰 공간을 차지
Timer.periodic 특정 시간마다 뭐나를 한다.
1 2 3 Timer.periodic(Duration(milliseconds: 500), (timer) { print(_animationController.value); });</description></item><item><title>플루터 CSS같은 효과주는 코드</title><link>https://i-loveu.github.io/flutter-css-effect/</link><pubDate>Mon, 30 Jan 2023 12:49:26 +0900</pubDate><author>Author</author><guid>https://i-loveu.github.io/flutter-css-effect/</guid><description>Overflow: hidden clipBehavior: Clip.hardEdge
1 2 3 Container( clipBehavior: Clip.hardEdge, // 기본값은 Clip.none ) Clip.none 넘쳐 흘러도 된다.
position: relative 1 2 3 Transform.translate( offset: const Offset(-10, 10), ) x축 -10pixel / y축 10pixel
콘텐츠 높이가 창의 크기를 넘을 때 SingleChildScrollView
1 2 3 4 body: SingleChildScrollView( child: Padding( padding: const EdgeInsets.symmetric(horizontal: 40), child: Column( body를 SingleChildScrollView로 감싸줍니다.
padding 1 2 3 padding: const EdgeInsets.</description></item><item><title>Javascript Push Replace 차이</title><link>https://i-loveu.github.io/javascript-push-replace/</link><pubDate>Mon, 11 Jul 2022 12:15:38 +0900</pubDate><author>Author</author><guid>https://i-loveu.github.io/javascript-push-replace/</guid><description><![CDATA[Push 브라우저의 히스토리를 남길 때 사용
1  router.push(&#34;/login&#34;);   Replace 히스토리를 남기자 않을 때 사용
1  router.replace(&#34;/login&#34;);   ]]></description></item><item><title>코딩 패턴</title><link>https://i-loveu.github.io/coding-pattern/</link><pubDate>Sat, 14 May 2022 05:18:16 +0900</pubDate><author>Author</author><guid>https://i-loveu.github.io/coding-pattern/</guid><description>패턴 전략 패턴 바뀔 수 있는 행똥을 캡슐화하고 어떤 행동을 적용할지 위임해서 결정합니다.
바꿔 쓸 수 있는 행동을 캡슐화 한 다음, 실제 행동은 다른 객체에 위임합니다.
어댑터 패턴 하나 이상의 클래스의 인터페이스를 변환합니다.
다른 객체를 감싸서 다른 인터페이스를 제공합니다.
반복자 패턴 컬렉션의 구현을 드러내지 안ㅇㅎ으면서도 컬렉션에 있는 모든 객체를 대상으로 반복작업을 할 수 있습니다.
퍼사드 패턴 클래스의 인터페이스를 단순화합니다.
여러 객체를 감싸서 인터페이스를 단순하게 만듭니다.
컴포지트 패턴 클라이언트에서 객체 컬렉션과 개별 객체를 똑같은 식으로 처리할 수 있습니다.</description></item><item><title>객체지향 원칙</title><link>https://i-loveu.github.io/principle-oop/</link><pubDate>Sun, 08 May 2022 05:36:31 +0900</pubDate><author>Author</author><guid>https://i-loveu.github.io/principle-oop/</guid><description>객체지향 기초 추상화 캡슐화 다형성 상속 객체지향 원칙 바뀌는 부분은 캡슐화 한다 상속보다는 구성을 활용한다 구현보다는 인터페이스에 맞춰서 프로그래밍한다 상호작용하는 객체 사이에서는 가능하면 느슨한 결합을 사용해야 한다 클래스는 확장에는 열려 있어야 하지만 변경에는 닫혀 있어야 한다(ocp) 추상화된 것에 의존하게 만들고 구상 클래스에 의존하지 않게 만든다 객체지향 패턴 어댑터 패턴 특정 클래스 인터페이스를 클라이언트에서 요구하는 다른 인터페이스로 변환합니다. 인터페이스가 호환되지 않아 같이 쓸 수 없었던 클래스를 사용할 수 있게 도와줍니다.</description></item><item><title>Svg Font Not Working on Safari</title><link>https://i-loveu.github.io/svg-font-not-working-on-safari/</link><pubDate>Wed, 13 Apr 2022 12:27:24 +0900</pubDate><author>Author</author><guid>https://i-loveu.github.io/svg-font-not-working-on-safari/</guid><description><![CDATA[SVG 폰트가 사파리에서 안될 때!! 1 2 3 4 5 6  &lt;text data-name=&#34;Noto Sans&#34; transform=&#34;translate(520 348)&#34; style=&#34;fill:#00c8b4;font-family:NotoSansKR-Bold,Noto Sans KR;font-weight:700;font-size:20px&#34; &gt;&lt;tspan x=&#34;-60.44&#34; y=&#34;0&#34;&gt;Noto Sans&lt;/tspan&gt;&lt;/text &gt;   대략 위와 같은 NotoSansKR폰트가 사파리에서는 그냐 sarif 폰트로 나온다면!
아래와 같이 바꿔준다.
1 2 3 4 5 6 7  &lt;text data-name=&#34;Noto Sans&#34; transform=&#34;translate(520 348)&#34; font-family=&#34;NotoSansKR, sans-serif&#34; style=&#34;fill:#00c8b4;font-weight:700;font-size:20px&#34; &gt;&lt;tspan x=&#34;-60.44&#34; y=&#34;0&#34;&gt;Noto Sans&lt;/tspan&gt;&lt;/text &gt;   font-family=&quot;NotoSansKR, sans-serif&quot;이 부분으로 style=&quot;font-family:NotoSansKR-Bold,Noto Sans KR;&quot;에서 꺼내준다. 이렇게 하면 적용 완료!]]></description></item><item><title>Picture Tag</title><link>https://i-loveu.github.io/picture-tag/</link><pubDate>Tue, 12 Apr 2022 13:21:37 +0900</pubDate><author>Author</author><guid>https://i-loveu.github.io/picture-tag/</guid><description><![CDATA[Picture Tag 백그라운드 이미지는 css에서 처리하지만, img태그는 처리하기 어려웠다. 그런데 img태그도 html상에서 미디어 쿼리를 적용할 수 있는 태그가 있다.
1 2 3 4 5  &lt;picture&gt; &lt;source srcset=&#34;images/logo-sone.svg&#34; media=&#34;(min-width:768px)&#34; /&gt; &lt;source srcset=&#34;images/logo-sone-m.svg&#34; media=&#34;(max-width:767px)&#34; /&gt; &lt;img src=&#34;images/logo-sone.svg&#34; alt=&#34;에스원&#34; /&gt; &lt;/picture&gt;   &lt;picture&gt;&lt;/picture&gt; 태그로 묶고 그 안에 소스로 미디어쿼리 처리를 한다. 그리고 위 설정이 먹히지 않는 곳은 img 태그가 보이게 된다.]]></description></item><item><title>Npm Upgrad</title><link>https://i-loveu.github.io/npm-upgrad/</link><pubDate>Tue, 25 Jan 2022 12:57:39 +0900</pubDate><author>Author</author><guid>https://i-loveu.github.io/npm-upgrad/</guid><description>npm 업그레이드 방법 버전 확인 1 npm -v 업그레이드 1 sudo npm install -g npm</description></item></channel></rss>